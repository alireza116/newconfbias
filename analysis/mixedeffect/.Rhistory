model_a <- lmer(size_of_belief_change ~ visGroup + (prior_belief_abs_error * prior_uncertainty) + (1|usertoken),data=df_exclude)
model_a %>% report() %>% text_long()
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(size_of_belief_change ~ visGroup + prior_belief_abs_error  + (prior_uncertainty|usertoken),data=df_exclude)
model_a <- lmer(size_of_belief_change ~ visGroup + prior_belief_abs_error + prior_uncertainty  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(size_of_belief_change ~ visGroup + prior_belief_abs_error  + (prior_uncertainty|usertoken),data=df_exclude)
model_a <- lmer(posterior_uncertainty ~ visGroup + prior_belief_abs_error + prior_belief_abs_error  + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + prior_belief_abs_error + prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_uncertainty ~ visGroup + prior_belief_abs_error + prior_belief  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_belief ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
model_a <- lmer(posterior_belief_abs_error ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a %>% report() %>% text_long()
model_a %>% report() %>% text_short()
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model <- lmer(size_of_belief_change ~ visGroup + population_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(size_of_uncertainty_change ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
to_include <- unique(df_exclude$usertoken)
df2 = read.csv('./mturkall.csv')
df2_exclude <- df2 %>% filter(df2$usertoken %in% to_include)
df2_exclude$draw_state <- factor(dummy(df2_exclude$state))
df2_exclude$elicitation_state <- factor(ifelse(df2_exclude$state == "draw1","prior","posterior"),c("prior","posterior"))
df2_exclude <- left_join(df2_exclude, pop_corrs, by="vars")
df2_exclude$population_correlation_abs <- factor(abs(df2_exclude$pop_corr))
df2_exclude$belief_absolute_error <- abs(df2_exclude$belief - df2_exclude$pop_corr)
df2_exclude$visGroup <- factor(df2_exclude$visGroup, c("scatter","line","band","hop"))
df2_exclude$uncertainty_size <- abs(df2_exclude$uncertaintyUpper - df2_exclude$uncertaintyLower)
model5 <- lmer(belief_absolute_error ~ visGroup * elicitation_state + population_correlation_abs +(1|usertoken),data=df2_exclude)
plot_model(model5, vline.color = "red",show.values = TRUE, value.offset = .3)
model5 %>% report() %>% text_short()
model6 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs +  (1|usertoken),data=df2_exclude)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 %>% report() %>% text_short()
plot_model(model5, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs +  (1|usertoken),data=df2_exclude)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 %>% report() %>% text_short()
iinstall.packages(jsonlite)
install.packages(jsonlite)
install.packages(RJSONIO)
iinstall.packages(rjson)
install.packages(rjson)
library(rjson)
install.packages("rjson")
library (rjson)
result <- fromJSON(file = "bootstrap_results.json")
result <- fromJSON(file = "./bootstrap_results.json")
result <- fromJSON(file = "./bootstrap_results.json")
# Convert JSON file to a data frame.
uncertainties <- as.data.frame(result)
View(uncertainties)
View(result)
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
library(plyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library (rjson)
theme_set(theme_sjplot())
result <- fromJSON(file = "./bootstrap_results.json")
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
View(pop_corrs)
View(uncertainties)
View(result)
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library (rjson)
theme_set(theme_sjplot())
result <- fromJSON(file = "./bootstrap_results.json")
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
View(uncertainties)
model <- lmer(size_of_belief_change ~ visGroup + population_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(size_of_uncertainty_change ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model5 <- lmer(belief_absolute_error ~ visGroup * elicitation_state + population_correlation_abs +(1|usertoken),data=df2_exclude)
plot_model(model5, vline.color = "red",show.values = TRUE, value.offset = .3)
View(model5)
model6 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs +  (1|usertoken),data=df2_exclude)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model <- lmer(size_of_belief_change ~ visGroup + population_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(size_of_uncertainty_change ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model <- lmer(size_of_belief_change ~ visGroup + population_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(size_of_uncertainty_change ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model5 <- lmer(belief_absolute_error ~ visGroup * elicitation_state + population_correlation_abs +(1|usertoken),data=df2_exclude)
plot_model(model5, vline.color = "red",show.values = TRUE, value.offset = .3)
model5 %>% report() %>% text_short()
model5 %>% report() %>% text_short()
model6 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs +  (1|usertoken),data=df2_exclude)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 %>% report() %>% text_short()
model2 <- lmer(size_of_uncertainty_change ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(diff_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs +  (1|usertoken),data=df2_exclude)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 %>% report() %>% text_short()
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
View(uncertainties)
uncertainties <- unique(uncertainties[c("vars")])
View(uncertainties)
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
View(uncertainties)
uncertainties <- unique(uncertainties[c("vars","pearsonr","uncertainty_lower","uncertainty_upper")])
View(uncertainties)
df_exclude <- left_join(df_exclude, uncertainties, by="vars")
View(df_exclude)
View(uncertainties)
View(uncertainties)
View(df_exclude)
View(df_exclude)
df_exclude$true_uncertainty <- abs(df_exclude$uncertainty_upper-df_exclude$uncertainty_lower)
View(df_exclude)
df2_exclude <- left_join(df2_exclude, uncertainties, by="vars")
df2_exclude$true_uncertainty <- abs(df2_exclude$uncertainty_upper-df2_exclude$uncertainty_lower)
View(df2_exclude)
model7 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs + true_uncertainty * elicitation_state +  (1|usertoken),data=df2_exclude)
plot_model(model7, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + true_uncertainty + (1|usertoken))
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + true_uncertainty + (1|usertoken))
View(df_exclude)
population_correlation_abs
df_exclude$with_uncertainty <- lapply(df_exclude$visGroup,function(x){
if (x=="scatter" | x== "line") {
return ("no")
} else {
return ("yes")
}
})
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model <- lmer(size_of_belief_change ~ visGroup + population_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
model_b <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + true_uncertainty + (1|usertoken))
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library (rjson)
theme_set(theme_sjplot())
result <- fromJSON(file = "./bootstrap_results.json")
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
uncertainties <- unique(uncertainties[c("vars","pearsonr","uncertainty_lower","uncertainty_upper")])
df <- read.csv(file="./processed_data.csv")
df_exclude <- df %>%
filter(exclude == 0)
pop_corrs <- unique(df_exclude[c("vars", "pop_corr")])
df_exclude$visGroup <- factor(df_exclude$visGroup, c("scatter","line","band","hop"))
df_exclude$with_uncertainty <- lapply(df_exclude$visGroup,function(x){
if (x=="scatter" | x== "line") {
return ("no")
} else {
return ("yes")
}
})
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
df_exclude <- left_join(df_exclude, uncertainties, by="vars")
df_exclude$true_uncertainty <- abs(df_exclude$uncertainty_upper-df_exclude$uncertainty_lower)
model <- lmer(size_of_belief_change ~ visGroup + population_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + population_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
model_b <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + true_uncertainty + (1|usertoken))
model_b <- lmer(post_uncertainty ~ visGroup + population_correlation_abs + true_uncertainty + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup * true_uncertainty + population_correlation_abs  + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup * true_uncertainty + population_correlation_abs * true_uncertainty + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(diff_uncertainty ~ visGroup * true_uncertainty + population_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(diff_belief ~ visGroup * true_uncertainty + population_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(diff_belief ~ visGroup + true_uncertainty * population_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model7 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs* elicitation_state + true_uncertainty * elicitation_state +  (1|usertoken),data=df2_exclude)
plot_model(model7, vline.color = "red",show.values = TRUE, value.offset = .3)
View(uncertainties)
model7 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs * true_uncertainty * elicitation_state +  (1|usertoken),data=df2_exclude)
plot_model(model7, vline.color = "red",show.values = TRUE, value.offset = .3)
model7 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs * true_uncertainty  +  (1|usertoken),data=df2_exclude)
plot_model(model7, vline.color = "red",show.values = TRUE, value.offset = .3)
model7 <-lmer(uncertainty_size ~ visGroup + true_uncertainty   +  (1|usertoken),data=df2_exclude)
plot_model(model7, vline.color = "red",show.values = TRUE, value.offset = .3)
anova(model7)
TukeyHSD(model7)
TukeyHSD(anova(model7))
anova(model7)
View(df_exclude)
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library (rjson)
theme_set(theme_sjplot())
result <- fromJSON(file = "./bootstrap_results.json")
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
uncertainties <- unique(uncertainties[c("vars","pearsonr","uncertainty_lower","uncertainty_upper")])
df <- read.csv(file="./processed_data.csv")
df_exclude <- df %>%
filter(exclude == 0)
pop_corrs <- unique(df_exclude[c("vars", "pop_corr")])
df_exclude$visGroup <- factor(df_exclude$visGroup, c("scatter","line","band","hop"))
df_exclude$with_uncertainty <- lapply(df_exclude$visGroup,function(x){
if (x=="scatter" | x== "line") {
return ("no")
} else {
return ("yes")
}
})
df_exclude <- left_join(df_exclude, uncertainties, by="vars")
df_exclude$true_uncertainty <- abs(df_exclude$uncertainty_upper-df_exclude$uncertainty_lower)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclue$sample_correlation_abs <- abs(ddf_exclude$pearsonr)
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
df_exclue$sample_correlation_abs <- abs(ddf_exclude$pearsonr)
df_exclue$sample_correlation_abs <- abs(df_exclude$pearsonr)
df_exclude$sample_correlation_abs <- abs(df_exclude$pearsonr)
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pop_corr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pop_corr)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
model_b <- lmer(diff_belief ~ visGroup + true_uncertainty * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
model_b <- lmer(diff_belief ~ visGroup + true_uncertainty * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_a <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pearsonr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pearsonr)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
model4 <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
model_a <- lmer(post_uncertainty ~ visGroup + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model3 <- lmer(posterior_belief_abs_error ~ visGroup + sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
model3 <- lmer(posterior_belief_abs_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
model4 <- lmer(post_uncertainty ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_a, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup * prior_belief_abs_error + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model3 <- lmer(posterior_belief_abs_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
model3 %>% report() %>% table_long()
model3 %>% report() %>% text_long()
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
anova(model3)
model3 <- lmer(posterior_belief_abs_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model3 <- lmer(posterior_belief_abs_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
model4 <- lmer(post_uncertainty ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup * prior_belief_abs_error + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(diff_uncertainty ~ visGroup * sample_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
View(df2_exclude)
ggplot2::ggplot(df2_exclude, aes(x = true_uncertainty)) +
geom_density() +
facet_wrap(.~population_correlation_abs)
View(dflong)
ggplot2::ggplot(df2_exclude, aes(x = true_uncertainty)) +
geom_density() +
facet_wrap(.~sample_correlation_abs)
ggplot2::ggplot(df2_exclude, aes(x = true_uncertainty)) +
geom_density() +
facet_wrap(.~sample_correlation_abs)
ggplot2::ggplot(df_exclude, aes(x = true_uncertainty)) +
geom_density() +
facet_wrap(.~sample_correlation_abs)
View(uncertainties)
model_c <- lmer(diff_belief ~ visGroup * pearsonr + (1|usertoken),data=df_exclude)
model_d <- lmer(diff_uncertainty ~ visGroup * pearsonr + (1|usertoken),data=df_exclude)
model_c <- lmer(diff_belief ~ visGroup * pearsonr + (1|usertoken),data=df_exclude)
model_d <- lmer(diff_uncertainty ~ visGroup * pearsonr + (1|usertoken),data=df_exclude)
?is_singular
?isSingular
model <- lmer(diff_belief ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model_d <- lmer(diff_uncertainty ~ visGroup * pearsonr + (1|usertoken),data=df_exclude)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- lmer(size_of_belief_change ~ visGroup + pearsonr + (1 | usertoken) ,data=df_exclude)
model <- lmer(size_of_belief_change ~ visGroup * sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- lmer(size_of_belief_change ~ visGroup * sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
diff_uncertainty
df_exclude <- left_join(df_exclude, uncertainties, by="vars")
df_exclude$true_uncertainty <- abs(df_exclude$uncertainty_upper-df_exclude$uncertainty_lower)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$sample_correlation_abs <- abs(df_exclude$pearsonr)
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pearsonr)
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library (rjson)
theme_set(theme_sjplot())
result <- fromJSON(file = "./bootstrap_results.json")
# Convert JSON file to a data frame.
uncertainties <- ldply(result, data.frame)
uncertainties <- unique(uncertainties[c("vars","pearsonr","uncertainty_lower","uncertainty_upper")])
df <- read.csv(file="./processed_data.csv")
df_exclude <- df %>%
filter(exclude == 0)
pop_corrs <- unique(df_exclude[c("vars", "pop_corr")])
df_exclude$visGroup <- factor(df_exclude$visGroup, c("scatter","line","band","hop"))
df_exclude$with_uncertainty <- lapply(df_exclude$visGroup,function(x){
if (x=="scatter" | x== "line") {
return ("no")
} else {
return ("yes")
}
})
df_exclude <- left_join(df_exclude, uncertainties, by="vars")
df_exclude$true_uncertainty <- abs(df_exclude$uncertainty_upper-df_exclude$uncertainty_lower)
df_exclude$size_of_belief_change <- abs(df_exclude$diff_belief)
df_exclude$size_of_uncertainty_change <-abs(df_exclude$diff_uncertainty)
df_exclude$population_correlation_abs <- factor(abs(df_exclude$pop_corr))
df_exclude$sample_correlation_abs <- abs(df_exclude$pearsonr)
df_exclude$prior_belief_abs_error <- abs(df_exclude$prior_belief - df_exclude$pearsonr)
df_exclude$posterior_belief_abs_error <- abs(df_exclude$post_belief - df_exclude$pearsonr)
model <- lmer(size_of_belief_change ~ visGroup + sample_correlation_abs + (1 | usertoken) ,data=df_exclude)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(diff_uncertainty ~ visGroup + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
modelc <- lmer(diff_uncertainty ~ visGroup + true_uncertainty + (1|usertoken) ,data=df_exclude)
plot_model(model_c, vline.color = "red",show.values = TRUE, value.offset = .3)
modelc <- lmer(diff_uncertainty ~ visGroup + true_uncertainty + (1|usertoken) ,data=df_exclude)
plot_model(modelc, vline.color = "red",show.values = TRUE, value.offset = .3)
model_e <- lmer(diff_uncertainty ~ visGroup + true_uncertainty + sample_correlation_abs + (1|usertoken) ,data=df_exclude)
plot_model(modele, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model_e, vline.color = "red",show.values = TRUE, value.offset = .3)
model_e <- lmer(diff_uncertainty ~ visGroup + true_uncertainty + (1|usertoken) ,data=df_exclude)
plot_model(model_e, vline.color = "red",show.values = TRUE, value.offset = .3)
model3 <- lmer(posterior_belief_abs_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model3, vline.color = "red",show.values = TRUE, value.offset = .3)
df_exclude$posterior_error <- df_exclude$post_belief - df_exclude$pearsonr
model3 <- lmer(posterior_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
model_f <- lmer(posterior_error ~ visGroup * sample_correlation_abs + (1|usertoken),data=df_exclude)
plot_model(model_f, vline.color = "red",show.values = TRUE, value.offset = .3)
model4 <- lmer(post_uncertainty ~ visGroup * true_uncertainty + (1|usertoken),data=df_exclude)
plot_model(model4, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup * prior_belief_abs_error + sample_correlation_abs * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model_b <- lmer(post_uncertainty ~ visGroup * prior_belief_abs_error + true_uncertainty * prior_belief_abs_error  + (1|usertoken),data=df_exclude)
plot_model(model_b, vline.color = "red",show.values = TRUE, value.offset = .3)
model5 <- lmer(belief_absolute_error ~ visGroup * elicitation_state + population_correlation_abs +(1|usertoken),data=df2_exclude)
model5 <- lmer(belief_absolute_error ~ visGroup * elicitation_state + population_correlation_abs +(1|usertoken),data=df2_exclude)
plot_model(model5, vline.color = "red",show.values = TRUE, value.offset = .3)
model6 <-lmer(uncertainty_size ~ visGroup * elicitation_state + population_correlation_abs +  (1|usertoken),data=df2_exclude)
plot_model(model6, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
